rootProject.name = 'AdvancedMusicPlayer'

def resolvePackagePath(packageName) {
    try {
        return new File(["node", "--print", "require.resolve('${packageName}/package.json')"].execute(null, rootDir).text.trim())
    } catch (Exception e) {
        println("Failed to resolve path for package: ${packageName}")
        return null
    }
}

apply from: new File(resolvePackagePath('expo'), "../scripts/autolinking.gradle")
useExpoModules()

apply from: new File(resolvePackagePath('@react-native-community/cli-platform-android'), "../native_modules.gradle")
applyNativeModulesSettingsGradle(settings)

include ':app'

includeBuild(new File(resolvePackagePath('react-native-gradle-plugin')).getParentFile())

if (settings.hasProperty("newArchEnabled") && settings.newArchEnabled == "true") {
    def reactAndroidPath = resolvePackagePath('react-native')
    if (reactAndroidPath != null) {
        include(":ReactAndroid")
        project(":ReactAndroid").projectDir = new File(reactAndroidPath, "../ReactAndroid")
        include(":ReactAndroid:hermes-engine")
        project(":ReactAndroid:hermes-engine").projectDir = new File(reactAndroidPath, "../ReactAndroid/hermes-engine")
    } else {
        println("ReactAndroid path could not be resolved!")
    }
}
